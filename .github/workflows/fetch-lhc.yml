name: Fetch LHC snapshot

on:
  schedule:
    - cron: "*/5 * * * *"   # alle 5 Minuten (Minuten-Granularität ist bei Actions realistischer)
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Fetch latest JSON
        run: |
          mkdir -p data
          curl -fsSL https://lhcstatus2.ovh/vistars.json -o data/latest.json
          # Wenn du zusätzlich „history“ pflegen willst:
          TS=$(date +%s)
          # einfache Extraktion einiger Zahlen (robust genug für Verlauf)
          E=$(jq -r '..|.energy? // empty' data/latest.json | head -n1)
          IB1=$(jq -r '..|.ib1? // empty' data/latest.json | head -n1)
          IB2=$(jq -r '..|.ib2? // empty' data/latest.json | head -n1)
          LUMI=$(jq -r '..|.lumi? // empty' data/latest.json | head -n1)
          # Zeile anhängen (nur wenn mind. ein Wert vorhanden ist)
          echo "{\"t\":$TS,\"energy\":${E:-null},\"ib1\":${IB1:-null},\"ib2\":${IB2:-null},\"lumi\":${LUMI:-null}}" >> data/lhc_history.jsonl
          # optional: History auf letzte 24h „trimmen“
          tail -n 1000 data/lhc_history.jsonl > data/lhc_history.tmp && mv data/lhc_history.tmp data/lhc_history.jsonl

      - name: Commit & push
        run: |
          if [[ -n "$(git status --porcelain data)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add data/latest.json data/lhc_history.jsonl
            git commit -m "Update LHC data $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
            git push
          fi

